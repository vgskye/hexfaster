plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.0.20"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url 'https://jitpack.io' }
	maven {
		url "https://squiddev.cc/maven/"
	}
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.shedaniel.me/" }

	// Hex Casting Dependencies
	maven { url "https://maven.blamejared.com/" }
	maven {
		name "entity reach"
		url "https://maven.jamieswhiteshirt.com/libs-release/"
	}
	maven { url "https://mvn.devos.one/snapshots/" }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = 'Kotlin for Forge'
		url = 'https://thedarkcolour.github.io/KotlinForForge/'
	}
	maven {
		url = "https://maven.theillusivec4.top/"
	}
	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		name "tterrag maven"
		url "https://maven.tterrag.com/"
	}
	maven {
		name "KosmX's maven"
		url 'https://maven.kosmx.dev/'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.19.2:2022.11.27@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	modImplementation("at.petra-k.hexcasting:hexcasting-fabric-1.19.2:0.10.3") {
		// If not excluded here, calls a nonexistent method and crashes the dev client
		exclude module: "phosphor"
	}


	modImplementation("com.jozufozu.flywheel:flywheel-fabric-1.19.2:0.6.10-8")
	modImplementation "maven.modrinth:hexgloop:1.19.2-0.2.0-fabric"
	modImplementation "maven.modrinth:lootr:0.4.28.69"
//	modImplementation "maven.modrinth:caxton:0.6.0-alpha.2+1.19.2-FABRIC"
	modImplementation "maven.modrinth:hexal:0.2.19"
	modImplementation "maven.modrinth:hexical:1.3.2"
	modImplementation "io.github.ladysnake:requiem:2.0.0-beta.8"
	modImplementation "io.github.ladysnake:automatone:0.7.0"
	modImplementation "io.github.ladysnake:locki:0.7.0"

	modImplementation "dev.architectury:architectury-fabric:6.6.92"
	modImplementation "maven.modrinth:wnboi:0.0.4-fabric"
	modImplementation "software.bernie.geckolib:geckolib-fabric-1.19:3.1.40"
	modImplementation "dev.kosmx.player-anim:player-animation-lib-fabric:1.0.2"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}